extends ../template

block variables 
    - var title = 'My blog'

block content 
    section.top_section.blog__top
        .blog_container 
            .video_back_blog    
                video(autoplay    object-fit="cover").video_back 
                    source(src="assets/images/common/night.mp4")
            img(src="assets/images/common/mountains.png", alt="1").mountains_back
            include ../common/header_top.pug
            
            .user_blog    
                .user__top
                    svg.svg_white_transp.svg_blog_top
                        use(xlink:href="assets/svg/sprite.svg#stars1")
                    .blog__title_content
                        .user__circle.user__pic
                            img(src="assets/images/common/user.jpg", alt="user").user__circle_img   
                        .main_title.blog__title Blog
                        p.blog__title_desc.blog_text_white Articles that I wrote
    section.blog__triangle_section
        .top_icon  
            svg.triangle_blog.about__triangle_left.svg_white_bg(viewBox="0 0 1000 100" preservaspectratio="none")
                polygon(points="0,0 0,100 500,100")
            svg.triangle_blog.about__triangle_right.svg_white_bg(viewBox="0 0 1000 100" preservaspectratio="none")
                polygon(points="500,100 1000,0 1000,100")
    section.blog__content
        
      
        .mobile_articles
            include ../common/blog_menu.pug
            .mobile_articles_button
        aside.articles.absolute
            include ../common/blog_menu.pug
            
            
            
        
        ul.articles__content 
            li.articles__content_item#article_first
                .article_title The most important things in SASS
                .article_date 22 of November 2017
                p.article_content.blog_text   If we define variable inside the rule it will be available only inside that rule without bloating the global scope. And even more — if we are not sure variable has already been defined somewhere, we use !default keyword in its declaration which says — if value exists in the outer scope then use it else please use this new value.One more mixin’s parameters feature is variable declaration which behaves same as ES6 spread operator. It allows us instead of passing each parameter to mixin individually just pass a list or a map(where map is similar to JS object) and values will be assigned automatically.
                p.article_content.blog_text So mixins give us great opportunity to pass declaration values(inline, block, #fffff, etc) or even property names(margin-right, color…) but what if we want to pass the whole SCSS block, not only parts of it? We can use content keyword.And what is cool here is that it actually allows me to stop searching for ‘media’ string in IDE each time I wanted to copy and past media query syntax into my code. I don’t need it anymore.
                img(src="assets/images/works/snippet.jpg", alt="232").article_photo     
            li.articles__content_item#article_second
                .article_title 7 Essential JavaScript Functions 
                .article_date 13 of November 2017
                p.article_content.blog_text I remember the early days of JavaScript where you needed a simple function for just about everything because the browser vendors implemented features differently, and not just edge features, basic features, like addEventListener and attachEvent.  Times have changed but there are still a few functions each developer should have in their arsenal, for performance for functional ease purposes.
                p.article_content.blog_text JavaScript, along with HTML5 and CSS3, is nowadays used widely by developers for developing responsive web applications that look good on both desktop computers and mobile devices. Despite being a client-side scripting language, JavaScript provides a number of features that help users to build robust websites without writing longer lines of code. Also, JavaScript enables programmers to reducing coding time by using a variety of pre-built functions. As a group of reusable code, functions allow programmers to make the codebase modular, and avoid writing the same piece of code repeatedly. The programmers also have option to take advantage of several pre-built functions in JavaScript.
            li.articles__content_item#article_third
                .article_title The most essential set of Gulp plugins
                .article_date 20 of October 2017
                p.article_content.blog_text  As a novice frontend developer, an obvious important step is to become familiar with the tools that help your colleagues not to lose their minds in this really challenging field: writing more flexible CSS code using Saas. You are entitled to the opportunity to optimize the transmission speed of the JS files through minification. You have also earned the luxury of automatic JS validation with JSHint.You've earned all these wonderful things.
                p.article_content.blog_text And so, you start using all the great tools and you have to manually run a huge number of instructions on the command line. From time to time, you forget to run the Sass compiler... Sometimes you forget to run JSHint and miss another bug...And one day you will wonder: is there a way to automate all these tools? How to set up a reliable workflow and avoid most errors? Of course there is a solution and tools that are just waiting for the moment when your hands get to them: Webpack and Gulp. 
            li.articles__content_item#article_fourth
                .article_title Why I chose Jade
                .article_date 12 of October 2017
                p.article_content.blog_text Jade, initially pushed me away with its syntax, it's still not html, just structured tags. No opening / closing tags - and it's wild at first, but very quickly you realize that it's convenient. And of course - it is the presence of good documentation - for any developer-it is very important.
                p.article_content.blog_text Another big plus in favor of Jade - is the inheritance of templates! It's super easy (pardon the slang, but it's true). To understand this, look at the views folder from the previous post. We have two files in it - a layout-a basic template that describes the entire structure and index file that inherits from layout (extensions layout) and overrides the content block. Just imagine how much time you save when creating a website.
        
    include ../common/footer.pug   
    